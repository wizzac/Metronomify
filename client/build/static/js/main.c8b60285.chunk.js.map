{"version":3,"sources":["assets/click1.wav","assets/click2.wav","card.js","metronomo.js","lista.js","buscador.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Card","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","item","trackId","_this2","_this$props$item","name","artists","album","id","image","images","url","fondo","backgroundImage","concat","react_default","a","createElement","className","onClick","setState","handler","style","Component","Metronome","startStop","playing","clearInterval","timer","setInterval","playClick","bpm","count","_this$state","beatsPerMeasure","click2","play","click1","handleBpmChange","event","target","value","Audio","tunning","_this$state2","type","min","max","onChange","Lista","list","refMet","React","createRef","clickHandler","bind","assertThisInitialized","axios","post","resultado","data","key","tempo","current","cards","map","m","i","card","src_metronomo","ref","Buscador","handleSubmit","_ref","asyncToGenerator","regenerator_default","mark","_callee","stringToSearch","wrap","_context","prev","next","preventDefault","search","sent","results","stop","_x","apply","arguments","handleChange","align","onSubmit","lista","App","token","getHashParams","access_token","va","loggedIn","e","hashParams","r","q","window","location","hash","substring","exec","decodeURIComponent","typed","Typed","el","strings","typeSpeed","backSpeed","backDelay","startDelay","loop","logged","buscador","href","src","defineProperty","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c8b60285.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/click1.7a7930a2.wav\";","module.exports = __webpack_public_path__ + \"static/media/click2.fe0ded65.wav\";","import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\nimport './style.css'\r\n\r\nclass Card extends Component {\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.state={\r\n      item:null,\r\n      trackId:''\r\n    }\r\n\r\n  }\r\n\r\n  render(){\r\n    const { name,artists,album,id} =this.props.item;\r\n    const image=album.images[0].url\r\n    const fondo={backgroundImage: `url(${image})`}\r\n\r\n    return (\r\n          <div className=\"card-container\" onClick={()=>{this.setState({trackId:id});this.props.handler(id)}}>\r\n                <div className=\"card\" style={fondo}>\r\n                <h4>{name}</h4>\r\n                <span className=\"chev\">{artists[0].name}</span>\r\n                </div>\r\n            </div>\r\n    )};\r\n}\r\n\r\nexport default Card\r\n","import React, { Component } from 'react';\r\nimport './metronomo.css';\r\nimport click1 from './assets/click1.wav';\r\nimport click2 from './assets/click2.wav';\r\nimport './style.css';\r\n\r\nclass Metronome extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.click1 = new Audio(click1);\r\n    this.click2 = new Audio(click2);\r\n    this.state = {\r\n      playing: false,\r\n      count: 0,\r\n      tunning:this.props.tunning,\r\n      bpm:  this.props.bpm,\r\n      beatsPerMeasure: 4\r\n    };\r\n  }\r\n\r\n  startStop = () => {\r\n    if (this.state.playing) {\r\n      clearInterval(this.timer);\r\n      this.setState({\r\n        playing: false\r\n      });\r\n    } else {\r\n      this.timer = setInterval(\r\n        this.playClick,\r\n        (60 / this.state.bpm) * 1000\r\n      );\r\n      this.setState({\r\n          count: 0,\r\n          playing: true\r\n        },\r\n        this.playClick\r\n      );\r\n    }\r\n  };\r\n\r\n  playClick = () => {\r\n    const { count, beatsPerMeasure } = this.state;\r\n    // The first beat will have a different sound than the others\r\n    if (count % beatsPerMeasure === 0) {\r\n      this.click2.play();\r\n    } else {\r\n      this.click1.play();\r\n    }\r\n  \r\n    // Keep track of which beat we're on\r\n    this.setState(state => ({\r\n      count: (state.count + 1) % state.beatsPerMeasure\r\n    }));\r\n  };\r\n\r\n  handleBpmChange = event => {\r\n    const bpm = event.target.value;\r\n    this.setState({ bpm });\r\n  }\r\n\r\n\r\n  render() {\r\n    const { playing, bpm,tunning } = this.state;\r\n    return (\r\n      <div className=\"metronome fixed\">\r\n        <div className=\"bpm-slider\">\r\n          <div>{bpm} BPM</div>\r\n          <div>Tune:{tunning}</div>\r\n          <input \r\n           type=\"range\"\r\n           min=\"60\"\r\n           max=\"240\"\r\n           value={bpm}\r\n           onChange={this.handleBpmChange} />\r\n        </div>\r\n        <button onClick={this.startStop}>\r\n            {playing ? 'Stop' : 'Start'}\r\n        </button>\r\n      </div>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nexport default Metronome;","import React, { Component } from 'react';\r\nimport Card from \"./card\";\r\nimport Metronome from \"./metronomo\";\r\nimport axios from 'axios';\r\n\r\n\r\nclass Lista extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      list: [],\r\n      tunning:'E',\r\n      bpm: 100,\r\n    };\r\n    this.refMet= React.createRef();\r\n    this.clickHandler = this.clickHandler.bind(this)\r\n\r\n  }\r\n  \r\n\r\n  async clickHandler(trackId){\r\n    const resultado=await axios.post('http://localhost:8888/advanced',{trackId:trackId})\r\n    this.setState({\r\n      tunning:resultado.data.key,\r\n      bpm:resultado.data.tempo\r\n    })\r\n    this.refMet.current.setState({\r\n      tunning:resultado.data.key,\r\n      bpm:resultado.data.tempo\r\n    })\r\n\r\n  }\r\n\r\n  render(){\r\n    \r\n    let cards = '';\r\n    if (this.props.list) {\r\n      cards = this.props.list.map((m, i) => <Card key={i} item={m} handler={this.clickHandler}/>);\r\n    }\r\n  \r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <div>{cards}</div>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <Metronome tunning={this.state.tunning} bpm={this.state.bpm} ref={this.refMet}></Metronome>\r\n        </div>\r\n      </div>\r\n    )};\r\n}\r\n\r\nexport default Lista;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\nimport './style.css'\r\nimport Lista from './lista'\r\n\r\nclass Buscador extends Component {\r\n  \r\n    constructor(){\r\n      super();\r\n      this.state = {\r\n        search:'',\r\n        results:[],     \r\n      }\r\n\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit=this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({search: event.target.value});\r\n    }\r\n\r\n    handleSubmit = async event => {\r\n        event.preventDefault()\r\n        var stringToSearch=this.state.search;\r\n        const resultado=await axios.post('http://localhost:8888/search',{stringToSearch})\r\n        this.setState({ results:resultado.data.results });\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"container\">\r\n                <br/>\r\n                <div className=\"row\" align=\"center\">\r\n                    <div className=\"col-md-12 col-md-offset-4\">\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <input className=\"barra\" type=\"text\" name=\"stringToSearch\" value={this.state.search} onChange={this.handleChange}></input>\r\n                            <input type=\"submit\" className=\"btnesta\" value=\"Buscar\" ></input>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                <br></br>\r\n                <div className=\"row\">\r\n                    <h3 >Esta Aplicacion permite buscar canciones en spotify, conocer en que nota esta afinada e iniciar un metrono al tempo estimado de la cancion</h3>\r\n                </div>\r\n                <br></br>\r\n                <Lista list={this.state.results} />\r\n            </div>\r\n        );\r\n    }\r\n}  \r\n\r\nexport default Buscador;","import React, { Component } from 'react';\r\nimport Typed from 'typed.js';\r\nimport  './style.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n//import axios from 'axios';\r\n//import $ from 'jquery';\r\n//import Popper from 'popper.js';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\nimport Buscador from './buscador';\r\n\r\n\r\n\r\nclass App extends Component {\r\n\r\n  constructor(){\r\n    super();\r\n    const params =this.getHashParams();\r\n    const token = params.access_token;\r\n    this.state = {\r\n      va:'',\r\n      token:token,\r\n      loggedIn: token ? true : false,\r\n    }\r\n  }\r\n\r\n\r\n getHashParams() {\r\n    var hashParams = {};\r\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\r\n        q = window.location.hash.substring(1);\r\n    e = r.exec(q)\r\n    while (e) {\r\n       hashParams[e[1]] = decodeURIComponent(e[2]);\r\n       e = r.exec(q);\r\n    }\r\n    return hashParams;\r\n  }\r\n\r\n  // initialize our state\r\n  \r\n  componentDidMount() {\r\n\r\n    var options ={\r\n      strings: ['<span>&nbsp;</span> para practicar','<span>&nbsp;</span> porque quiero','<span>&nbsp;</span> porque puedo'],\r\n      typeSpeed: 30,\r\n      backSpeed: 60,\r\n      backDelay: 1000,\r\n      startDelay: 1000,\r\n      loop: true,\r\n    };\r\n    this.typed = new Typed(this.el, options);\r\n    \r\n  }\r\n\r\n\r\n  render() {\r\n   \r\n    if(this.state.loggedIn === true){\r\n      var logged = <div className=\"divLogged\">\r\n                        <div id=\"log\" className=\"row\"></div>\r\n                  <br></br>\r\n                    <div id=\"loggedin\" className=\"row\">\r\n                      <div className=\"col-md-12\">\r\n                        <Buscador results={[]}/>\r\n                      </div>\r\n                    </div>\r\n                </div>\r\n    }else{\r\n      logged= <div id=\"btnLog\"> \r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12\">\r\n                    <br></br>    \r\n                    <a className=\"btnesta pull-right\" href='http://localhost:8888/login'>Conectar a spotifyyyy</a>\r\n                  </div>\r\n                </div>\r\n                <br></br>\r\n              </div>\r\n    }    \r\n    return (\r\n      <div className=\"container\">\r\n        <script src=\"http://code.jquery.com/jquery-1.10.1.min.js\"></script>\r\n        <div id=\"login\">\r\n          <div className=\"row\" >\r\n            <div className=\"col-md-12\"  className=\"absol\">\r\n              <h1>Implementacion de api de spotify\r\n                <span ref={(el) => { this.el = el; }}/>\r\n              </h1> \r\n            </div>\r\n          </div>\r\n        {logged}\r\n    </div>  \r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nserviceWorker.unregister();\r\n\r\n"],"sourceRoot":""}